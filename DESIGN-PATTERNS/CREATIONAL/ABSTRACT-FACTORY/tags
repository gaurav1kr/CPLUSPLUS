!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	//
Body	Car.cpp	/^		Body(string n, int strength) :name(n), strength(strength) {}$/;"	f	class:Body	file:
Body	Car.cpp	/^class Body$/;"	c	file:
Car	Car.cpp	/^		Car(string n) :name(n) {}$/;"	f	class:Car	file:
Car	Car.cpp	/^class Car$/;"	c	file:
CarFactory	CarFactory.cpp	/^class CarFactory$/;"	c	file:
LuxuryBody	Car.cpp	/^		LuxuryBody() : Body("LuxuryBody", 100) {}$/;"	f	class:LuxuryBody	file:
LuxuryBody	Car.cpp	/^class LuxuryBody : public Body$/;"	c	file:
LuxuryCarFactory	CarFactory.cpp	/^class LuxuryCarFactory : public CarFactory$/;"	c	file:
LuxuryTire	Car.cpp	/^		LuxuryTire() : Tire("LuxuryTire", 100) {}$/;"	f	class:LuxuryTire	file:
LuxuryTire	Car.cpp	/^class LuxuryTire : public Tire$/;"	c	file:
SimpleBody	Car.cpp	/^		SimpleBody() :Body("SimpleBody", 75) {}$/;"	f	class:SimpleBody	file:
SimpleBody	Car.cpp	/^class SimpleBody : public Body$/;"	c	file:
SimpleCarFactory	CarFactory.cpp	/^class SimpleCarFactory : public CarFactory$/;"	c	file:
SimpleTire	Car.cpp	/^		SimpleTire() :Tire("SimpleTire", 75) {}$/;"	f	class:SimpleTire	file:
SimpleTire	Car.cpp	/^class SimpleTire : public Tire$/;"	c	file:
Tire	Car.cpp	/^		Tire(string n, int pressure) :name(n), pressure(pressure) {}$/;"	f	class:Tire	file:
Tire	Car.cpp	/^class Tire$/;"	c	file:
__io__	Car.cpp	/^#define __io__$/;"	d	file:
__io__	CarFactory.cpp	/^#define __io__$/;"	d	file:
__io__	client.cpp	/^#define __io__$/;"	d	file:
body	Car.cpp	/^		Body* body;$/;"	m	class:Car	typeref:typename:Body *	file:
buildBody	CarFactory.cpp	/^	Body* buildBody()$/;"	f	class:LuxuryCarFactory	typeref:typename:Body *	file:
buildBody	CarFactory.cpp	/^	Body* buildBody()$/;"	f	class:SimpleCarFactory	typeref:typename:Body *	file:
buildTire	CarFactory.cpp	/^	Tire* buildTire()$/;"	f	class:LuxuryCarFactory	typeref:typename:Tire *	file:
buildTire	CarFactory.cpp	/^	Tire* buildTire()$/;"	f	class:SimpleCarFactory	typeref:typename:Tire *	file:
buildWholeCar	CarFactory.cpp	/^	Car* buildWholeCar()$/;"	f	class:LuxuryCarFactory	typeref:typename:Car *	file:
buildWholeCar	CarFactory.cpp	/^	Car* buildWholeCar()$/;"	f	class:SimpleCarFactory	typeref:typename:Car *	file:
car	CarFactory.cpp	/^		Car* car;$/;"	m	class:CarFactory	typeref:typename:Car *	file:
getName	Car.cpp	/^		string getName()$/;"	f	class:Body	typeref:typename:string	file:
getName	Car.cpp	/^		string getName()$/;"	f	class:Tire	typeref:typename:string	file:
getPressure	Car.cpp	/^		int getPressure()$/;"	f	class:Tire	typeref:typename:int	file:
getStrength	Car.cpp	/^		int getStrength()$/;"	f	class:Body	typeref:typename:int	file:
main	client.cpp	/^int main()$/;"	f	typeref:typename:int
name	Car.cpp	/^		string name;$/;"	m	class:Body	typeref:typename:string	file:
name	Car.cpp	/^		string name;$/;"	m	class:Car	typeref:typename:string	file:
name	Car.cpp	/^		string name;$/;"	m	class:Tire	typeref:typename:string	file:
pressure	Car.cpp	/^		int pressure;$/;"	m	class:Tire	typeref:typename:int	file:
printDetails	Car.cpp	/^		void printDetails()$/;"	f	class:Car	typeref:typename:void	file:
setBody	Car.cpp	/^		void setBody(Body* b) { body = b; }$/;"	f	class:Car	typeref:typename:void	file:
setTire	Car.cpp	/^		void setTire(Tire* t) { tire = t; }$/;"	f	class:Car	typeref:typename:void	file:
strength	Car.cpp	/^		int strength;$/;"	m	class:Body	typeref:typename:int	file:
tire	Car.cpp	/^		Tire* tire;$/;"	m	class:Car	typeref:typename:Tire *	file:
